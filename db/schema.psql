CREATE TYPE "RequestStatus" AS ENUM ( -- Custom type for request status
  'Pending',
  'Approved',
  'Borrowed',
  'Returned',
  'NotReturned'
);

CREATE TABLE "Users" (
  "UserID" SERIAL PRIMARY KEY,
  "Name" text NOT NULL,
  "Address" text NOT NULL,
  "Email" text UNIQUE NOT NULL, -- User email address
  "Phone" varchar(10),
  "LendingDiameter" int, -- In kilometers, how far out they are willing to lend
  "Latitude" float, -- For storing latitude of the address
  "Longitude" float -- For storing longitude of the address
);

CREATE TABLE "Tools" (
  "ToolID" SERIAL PRIMARY KEY, -- Auto-incrementing primary key
  "Name" varchar(255) NOT NULL,
  "Picture" varchar(255), -- URL or file path to the image
  "Description" text,
  "Deposit" decimal(10,2), -- Deposit requested (to be returned to borrower)
  -- "Charge" decimal(10,2) NULL, -- Fee amount (to be decided if implemented)
  "DI4U" bool, -- Whether the tool is available for drop-in-for-use
  "OwnerID" INT REFERENCES "Users" ("UserID") -- Foreign key referencing Users(UserID)
);

CREATE TABLE "Requests" (  --For all borrow/lend transactions and history
  "Requests" SERIAL PRIMARY KEY, -- Auto-incrementing
  "OwnerID" INT REFERENCES "Users" ("UserID"),
  "BorrowerID" INT REFERENCES "Users" ("UserID"),
  "ToolID" INT REFERENCES "Tools" ("ToolID"),
  "Status" "RequestStatus", -- Status of the lending request
  "LenderRating" bool NULL, -- Whether lender approves the transaction, basically a thumbs up/down
  "BorrowerRating" bool NULL, -- Whether borrower approves the transaction
  "BorrowerFeedback" text NULL, -- Any text notes to leave
  "LenderFeedback" text NULL, -- Any text notes to leave
  "RequestDate" timestamp DEFAULT (now()), -- Date and time when the request was made, auto-date when new row inserted
  "ApproveDate" timestamp NULL, -- Date and time when the request was approved
  "BorrowDate" timestamp NULL, -- Date and time when the tool was borrowed
  "ReturnDate" timestamp NULL, -- Date and time when the tool was returned
);

CREATE TABLE "UsersRequests" (
"UserID" INT REFERENCES "Users" ("UserID"),
"RequestID" INT REFERENCES "Requests" ("RequestID")
);
